@model MediaControlModel
@{
    ViewBag.Title = "Media Controls";
}
@section submenu { @Html.Partial("_menu") }

@{
    using (Html.BeginForm<MyAccountController>(x => x.MediaControls(), FormMethod.Post))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <legend>Media Controls</legend>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.IsEnabled)
            @Html.CheckBoxFor(x => x.IsEnabled)
            @Html.ValidationMessageFor(x => x.IsEnabled)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.AutoPause)
            @Html.CheckBoxFor(x => x.AutoPause)
            @Html.ValidationMessageFor(x => x.AutoPause)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.SecondsToRewind)
            @Html.TextBoxFor(x => x.SecondsToRewind)
            @Html.ValidationMessageFor(x => x.SecondsToRewind)
        </div>
        <div class="clr10"></div>
        <p class="notice">When you type in a key, the internal keycode will automatically be filled in. To disable a shortcut, leave the box blank.</p>
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.RewindToBeginning)
            @Html.TextBoxFor(x => x.RewindToBeginning, new { @class = "keycode" })
            @Html.ValidationMessageFor(x => x.RewindToBeginning)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Rewind)
            @Html.TextBoxFor(x => x.Rewind, new { @class = "keycode" })
            @Html.ValidationMessageFor(x => x.Rewind)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.PlayPause)
            @Html.TextBoxFor(x => x.PlayPause, new { @class = "keycode" })
            @Html.ValidationMessageFor(x => x.PlayPause)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Stop)
            @Html.TextBoxFor(x => x.Stop, new { @class = "keycode" })
            @Html.ValidationMessageFor(x => x.Stop)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.FastForward)
            @Html.TextBoxFor(x => x.FastForward, new { @class = "keycode" })
            @Html.ValidationMessageFor(x => x.FastForward)
        </div>
    
        <button type="submit">
            <span>save</span>
        </button>
    }
}

@section bottomJS {
<script language="javascript" type="text/javascript">
    $('input.keycode').keydown(function (event) {
        switch (event.which) {
            case 8:
            case 9:
            case 13:
            case 116:
                return;

            default:
                event.preventDefault();
                $(this).val(event.which);
                break;
        }
    });
</script>
}
