@model LanguageModel
@{
    ViewBag.Title = "Add Language";
}
@section submenu {
    @Html.Partial("_menu")
}
@section footer { }
@section styles {
    <link href="@AppHelper.CssUrl("site/jquery-ui-1.8.17.custom.css")" rel="stylesheet" type="text/css" media="screen, projection"/>
}
@{
    using(Html.BeginForm<LanguagesController>(x => x.Add(), FormMethod.Post))
    {
    @Html.AntiForgeryToken()
    <legend>Add Language</legend>

    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.SystemLanguageName)
        @Html.TextBoxFor(x => x.SystemLanguageName)
        @Html.ValidationMessageFor(x => x.SystemLanguageName)
    </div>

    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.Name)
        @Html.TextBoxFor(x => x.Name)
        @Html.ValidationMessageFor(x => x.Name)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.Colour)
        @Html.TextBoxFor(x => x.Colour, new { style = "width: 70px" })
        <select style="width: 100px" onchange="$('#Colour').val($(this).val()); $('#Colour').css('background-color', $(this).val())">
            <option value="">Choose</option>
            @foreach(var colour in ViewBag.Colours as Dictionary<string, string>)
            { 
                <option value="@colour.Key">@colour.Value</option>
            }
        </select>
        @Html.ValidationMessageFor(x => x.Colour)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.TranslateUrl)
        @Html.TextBoxFor(x => x.TranslateUrl)
        @Html.ValidationMessageFor(x => x.TranslateUrl)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.IsRtlLanguage)
        @Html.CheckBoxFor(x => x.IsRtlLanguage)
        @Html.ValidationMessageFor(x => x.IsRtlLanguage)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.HasRomanisationField)
        @Html.CheckBoxFor(x => x.HasRomanisationField)
        @Html.ValidationMessageFor(x => x.HasRomanisationField)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.RemoveSpaces)
        @Html.CheckBoxFor(x => x.RemoveSpaces)
        @Html.ValidationMessageFor(x => x.RemoveSpaces)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.ModalBehaviour)
        @Html.DropDownListFor(
                x => x.ModalBehaviour,
                new SelectList(
                    from ModalBehaviour mb in Enum.GetValues(typeof(ModalBehaviour))
                    select new { Key = mb, Value = EnumHelper.GetDescription(mb) }, "Key", "Value"
                    ),
                "Please choose a modal behaviour"
           )
        @Html.ValidationMessageFor(x => x.ModalBehaviour)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.Punctuation)
        @Html.TextBoxFor(x => x.Punctuation)
        @Html.ValidationMessageFor(x => x.Punctuation)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.PunctuationRegEx)
        @Html.TextBoxFor(x => x.PunctuationRegEx)
        @Html.ValidationMessageFor(x => x.PunctuationRegEx)
    </div>
    
    <div class="input_wrapper">
        @Html.LabelHelpFor(x => x.SentenceEndRegEx)
        @Html.TextBoxFor(x => x.SentenceEndRegEx)
        @Html.ValidationMessageFor(x => x.SentenceEndRegEx)
    </div>
        
    <button type="submit">
        <span>add language</span>
    </button>
    }
}
@section bottomJS {
    <script language="javascript" type="text/javascript">
        new uiHelper({
            urls: { ajaxUrl: '@((ViewData[CacheKeys.URLS] as UrlModel).Ajax.Base)' },
            autocomplete: [{ name: '#SystemLanguageName', length: 2, endpoint: 'autocompletesystemlanguagename'}]
        });
    </script>
}
