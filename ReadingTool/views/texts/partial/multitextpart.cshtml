@model MultiTextPartModel
@{
    Layout = "";
}
@{ Html.RegisterFormContextForValidation(); }
<div class="part">
    @{
        using(Html.BeginCollectionItem("Parts"))
        {
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Title)
            @Html.TextBoxFor(x => x.Title)
            @Html.ValidationMessageFor(x => x.Title)
        </div>
            <div class="input_wrapper">
                @Html.LabelHelpFor(x => x.CollectionNo)
                @Html.TextBoxFor(x => x.CollectionNo)
                @Html.ValidationMessageFor(x => x.CollectionNo)
            </div>
        
            <div class="input_wrapper">
                @Html.LabelHelpFor(x => x.AudioUrl)
                @Html.TextBoxFor(x => x.AudioUrl)
                @Html.ValidationMessageFor(x => x.AudioUrl)
            </div>
        
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.ShareUrl)
            @Html.CheckBoxFor(x => x.ShareUrl)
            @Html.ValidationMessageFor(x => x.ShareUrl)
        </div>
        
        <div class="input_wrapper" data-bind="visible: canParse">
            @Html.LabelHelpFor(x => x.ParseWith)
            @Html.DropDownListFor(x => x.ParseWith, new SelectList(ViewBag.Parsers as Dictionary<string, string>, "Key", "Value"), "None")
            @Html.ValidationMessageFor(x => x.ParseWith)
        </div>
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Text)
            @Html.TextAreaFor(x => x.Text, new Dictionary<string, object>() { { "data-bind", "attr: { dir: isRtl }" } })
            @Html.ValidationMessageFor(x => x.Text)
        </div>
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.ParallelIsRtl)
            @Html.CheckBoxFor(x => x.ParallelIsRtl, new { onclick = "$(this).parent().parent().find('.ptext').attr('dir', $(this).is(':checked') ? 'rtl' : 'ltr')" })
            @Html.ValidationMessageFor(x => x.ParallelIsRtl)
        </div>
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.ParallelText)
            @Html.TextAreaFor(x => x.ParallelText, new { @class = "ptext" })
            @Html.ValidationMessageFor(x => x.ParallelText)
        </div>
        }
    }
    <div class="clr5">
    </div>
    <ul class="top">
        <li><a href="#" title="remove this text part" class="sprite spritesedit-removepart deletePart"
            onclick="return false;" style="margin-left: 20px;" onmouseover="$(this).parents('div.part:first').css('background-color','#FFF4F4')"
            onmouseout="$(this).parents('div.part:first').css('background-color','white')">remove
            part </a></li>
    </ul>
    <div class="clr15">
    </div>
    <hr />
</div>
