@using MongoDB.Bson
@model VideoModel
@{
    ViewBag.Title = "Add Video";
}
@section styles {
    <link href="@AppHelper.CssUrl("site/jquery-ui-1.8.17.custom.css")" rel="stylesheet" type="text/css" media="screen, projection"/>
}
@section submenu { @Html.Partial("_menu") }
@section footer { }
<p class="warning">
    Video support is very much experimental. The only supported format is MP4 and the subtitle format is SRT. In addition multipart words 
    are not supported. It is safe to save and change words though.
</p>
@{
    using(Html.BeginForm<TextsController>(x => x.AddVideo(), FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <legend>Add Video</legend>

        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.LanguageId)
            @Html.DropDownListFor(
                x => x.LanguageId,
                new SelectList(ViewBag.Languages as Dictionary<ObjectId, string>, "Key", "Value"),
                "Please choose a language"
           )
            @Html.ValidationMessageFor(x => x.LanguageId)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Url)
            @Html.TextBoxFor(x => x.Url)
            <span data-bind="text: defaultMediaUrl" onclick="$('#Url').val($(this).html()); return false;">&nbsp;</span>
            @Html.ValidationMessageFor(x => x.Url)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.CollectionName)
            @Html.TextBoxFor(x => x.CollectionName)
            @Html.ValidationMessageFor(x => x.CollectionName)
        </div>

        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.CollectionNo)
            @Html.TextBoxFor(x => x.CollectionNo)
            @Html.ValidationMessageFor(x => x.CollectionNo)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Title)
            @Html.TextBoxFor(x => x.Title)
            @Html.ValidationMessageFor(x => x.Title)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Tags)
            @Html.TextBoxFor(x => x.Tags)
            @Html.ValidationMessageFor(x => x.Tags)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.L1Text)
            @Html.TextAreaFor(x => x.L1Text)
            @Html.ValidationMessageFor(x => x.L1Text)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.L2Text)
            @Html.TextAreaFor(x => x.L2Text)
            @Html.ValidationMessageFor(x => x.L2Text)
        </div>
    
        <button type="submit">
            <span>add video</span>
        </button>
    }
}

@section bottomJS {
    <script language="javascript" type="text/javascript">
        new uiHelper({
            urls: { ajaxUrl: '@((ViewData[CacheKeys.URLS] as UrlModel).Ajax)' },
            autocomplete: [{ name: '#CollectionName', endpoint: 'autocompletevideocollectionname'}],
            tags: [{ name: '#Tags', endpoint: 'autocompletevideotags'}]
        });
    </script>
}