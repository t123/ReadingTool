@model StyleModel
@{
    ViewBag.Title = "Styles";
}
@section submenu { @Html.Partial("_menu") }

<p class="notice">
    You can override the reading style sheet or individual parts by filling in the form below. If you want to use the default simply 
    leave the field blank. The colours are in the format 
    <a href="http://en.wikipedia.org/wiki/Web_colors#CSS_colors" target="_blank">#RRGGBB or #RGB</a>.
</p>
@{
    using (Html.BeginForm<MyAccountController>(x => x.Styles(), FormMethod.Post))
    {
        @Html.ValidationSummary(true)
        @Html.AntiForgeryToken()
        <legend>Styles</legend>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.ReadingCssUrl)
            @Html.TextBoxFor(x => x.ReadingCssUrl)
            @Html.ValidationMessageFor(x => x.ReadingCssUrl)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.WatchingCssUrl)
            @Html.TextBoxFor(x => x.WatchingCssUrl)
            @Html.ValidationMessageFor(x => x.WatchingCssUrl)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.NotSeen)
            @Html.TextBoxFor(x => x.NotSeen)
            @Html.ValidationMessageFor(x => x.NotSeen)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Known)
            @Html.TextBoxFor(x => x.Known)
            @Html.ValidationMessageFor(x => x.Known)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Unknown)
            @Html.TextBoxFor(x => x.Unknown)
            @Html.ValidationMessageFor(x => x.Unknown)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.Ignored)
            @Html.TextBoxFor(x => x.Ignored)
            @Html.ValidationMessageFor(x => x.Ignored)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.TextAreaBackground)
            @Html.TextBoxFor(x => x.TextAreaBackground)
            @Html.ValidationMessageFor(x => x.TextAreaBackground)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.TextContentBackground)
            @Html.TextBoxFor(x => x.TextContentBackground)
            @Html.ValidationMessageFor(x => x.TextContentBackground)
        </div>
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.TextContentFont)
            @Html.TextBoxFor(x => x.TextContentFont)
            @Html.ValidationMessageFor(x => x.TextContentFont)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.TextContentColour)
            @Html.TextBoxFor(x => x.TextContentColour)
            @Html.ValidationMessageFor(x => x.TextContentColour)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.TextSize)
            @Html.TextBoxFor(x => x.TextSize)
            @Html.ValidationMessageFor(x => x.TextSize)
        </div>
    
        <div class="input_wrapper">
            @Html.LabelHelpFor(x => x.LineHeight)
            @Html.TextBoxFor(x => x.LineHeight)
            @Html.ValidationMessageFor(x => x.LineHeight)
        </div>
    
        <button type="submit">
            <span>save</span>
        </button>
    }
}