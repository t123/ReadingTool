@using ReadingTool.Common
@using ReadingTool.Common.Extensions
@model ReadingTool.Site.Models.Languages.LanguageEditModel
@{
    ViewBag.Title = "Edit Language";
    var directions = new Dictionary<LanguageDirection, string>
        {
            {LanguageDirection.LTR, "Left to Right"},
            {LanguageDirection.RTL, "Right to Left"}
        };
}

<div class="row-fluid">
    <div class="span1"></div>
    <div class="span10">
        @using(Html.BeginForm("Edit", "Languages", new { id = Model.Language.LanguageId }, FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Language.LanguageId)
            <fieldset>
                <legend>Edit Language</legend>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.Name, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(x => x.Language.Name, new { @watermark = "your name for the language", @class="input-xlarge" })
                        @Html.ValidationMessageFor(x => x.Language.Name)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.Code, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(x => x.Language.Code, new SelectList(Model.Language.Languages, "Key", "Value"))
                        @Html.ValidationMessageFor(x => x.Language.Code)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.ModalBehaviour, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(x => x.Language.ModalBehaviour, new SelectList(from ModalBehaviour m in Enum.GetValues(typeof(ModalBehaviour)) select new { Key=m, Value=m.ToDescription()}, "Key", "Value"))
                        @Html.ValidationMessageFor(x => x.Language.ModalBehaviour)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.Modal, new { @class = "control-label" })
                    <div class="controls">
                        @Html.CheckBoxFor(x => x.Language.Modal, new { @placeholder = "open dictionaries in a modal dialog" })
                        @Html.ValidationMessageFor(x => x.Language.Modal)
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <legend>Parser Settings</legend>
                @Html.FlashMessage(@"For a language like French, if you want to treat words like <i>est-ce</i>, <i>là-bas</i> or <i>s'il</i> 
as a single word, use the following expression <strong>a-zA-ZÀ-ÖØ-öø-ȳ\-\'</strong> instead.", htmlEncode: false)
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.RegexWordCharacters, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(x => x.Language.RegexWordCharacters, new { @placeholder = "word test regular expression, add \\-\\' for French", @class="input-xxlarge" })
                        @Html.ValidationMessageFor(x => x.Language.RegexWordCharacters)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.RegexSplitSentences, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(x => x.Language.RegexSplitSentences, new { @placeholder = "end of sentence characters", @class="input-xxlarge" })
                        @Html.ValidationMessageFor(x => x.Language.RegexSplitSentences)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.Direction, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(x => x.Language.Direction, new SelectList(directions, "Key", "Value", Model.Language.Direction))
                        @Html.ValidationMessageFor(x => x.Language.Direction)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(x => x.Language.ShowSpaces, new { @class = "control-label" })
                    <div class="controls">
                        @Html.CheckBoxFor(x => x.Language.ShowSpaces, new { @placeholder = "show spaces in the text" })
                        @Html.ValidationMessageFor(x => x.Language.ShowSpaces)
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </fieldset>
        }
    </div>
    <div class="span1"></div>
</div>
<div class="row-fluid">
    <div class="span1"></div>
    <div class="span10">
        @if(Model.Dictionaries.Any())
        {
            <table class="table table-striped table-bordered table-condensed table-hover">
                <caption>Dictionaries</caption>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Url</th>
                        <th>Auto Open?</th>
                        <th>Sentence?</th>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var dictionary in Model.Dictionaries)
                    {
                        <tr>
                            <td>@dictionary.Name</td>
                            <td>@dictionary.Url</td>
                            <td>@Html.FormatYesNo(dictionary.AutoOpen)</td>
                            <td>@Html.FormatYesNo(dictionary.Sentence)</td>
                            <td><a href="@Url.Action("EditDictionary", new {id=Model.Language.LanguageId, dictionaryId=dictionary.DictionaryId})" class="btn btn-small">Edit</a></td>
                            <td>
                                @using(Html.BeginForm("DeleteDictionary", "Languages", new {id=Model.Language.LanguageId, dictionaryId=dictionary.DictionaryId}, FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="submit" value="Delete" class="btn btn-danger btn-small"/>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <strong>No dictionaries defined.</strong>
        }
    </div>
    <div class="span1"></div>
</div>
<div class="row-fluid">
    <div class="span1"></div>
    <div class="span10">
        <a href="@Url.Action("AddDictionary", new { id=Model.Language.LanguageId})" class="btn btn-primary">Add new dictionary</a>
        <div class="clr10"></div>
    </div>
    <div class="span1"></div>
</div>