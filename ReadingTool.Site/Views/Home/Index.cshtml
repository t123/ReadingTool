@model ReadingTool.Site.Models.Home.AccountModel
@{
    Layout = "";
    Bundles.Reference("Content/css");
    Bundles.Reference("Scripts/Required");
    Bundles.Reference("Scripts/Body", "body");
    
    var signInErrors = ViewBag.SignInErrors as string[];
    var registerErrors = ViewBag.RegisterErrors as string[];
    string errorClass = "";
}

<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>ReadingTool</title>
        @Bundles.RenderStylesheets()
        @Bundles.RenderScripts()
    </head>
    <body>
        <div class="container-fluid">
            <div class="row-fluid" style="height: 40px;">
                <span class="span12"></span>
            </div>
            @Html.Flash()
            <div class="row-fluid">
                <div class="span1"></div>
                <div class="span5 signin">
                    @using(Html.BeginForm("SignIn", "Home", FormMethod.Post, new { @class="form-horizontal"}))
                    {
                        @Html.AntiForgeryToken()
                        <fieldset>
                            <legend>Sign In</legend>
                            <div class="errorlist">
                                @if(signInErrors!=null)
                                {
                                    <ul>
                                        @foreach(var error in signInErrors)
                                        {
                                            <li>@error</li>
                                        }
                                    </ul>
                                }
                            </div>
                            @{
                                errorClass = Html.HasErrorFor(x => x.SignIn.Username) ? @"error" : "";
                            }
                            <div class="control-group @errorClass">
                                @Html.LabelFor(x => x.SignIn.Username, new {@class = "control-label"})
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.SignIn.Username, new {@placeholder = "your username"})
                                </div>
                            </div>
                            @{
                                errorClass = Html.HasErrorFor(x => x.SignIn.Password) ? @"error" : "";
                            }
                            <div class="control-group @errorClass">
                                @Html.LabelFor(x => x.SignIn.Password, new {@class = "control-label"})
                                <div class="controls">
                                    @Html.PasswordFor(x => x.SignIn.Password, new {@placeholder = "your password"})
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary">Sign In</button>
                            </div>
                        </fieldset>
                    }
                </div>
                <div class="span5 register">
                    @using(Html.BeginForm("Register", "Home", FormMethod.Post, new { @class="form-horizontal", autocomplete="off"}))
                    {
                        @Html.AntiForgeryToken()
                        <fieldset>
                            <legend>Register</legend>
                            <div class="errorlist">
                                @if(registerErrors!=null)
                                {
                                    <ul>
                                        @foreach(var error in registerErrors)
                                        {
                                            <li>@error</li>
                                        }
                                    </ul>
                                }
                            </div>
                            @{
                                errorClass = Html.HasErrorFor(x => x.Register.Username) ? @"error" : "";
                            }
                            <div class="control-group @errorClass">
                                @Html.LabelFor(x=>x.Register.Username, new { @class="control-label"})
                                <div class="controls">
                                    @Html.TextBoxFor(x=>x.Register.Username, new { @placeholder="pick any username"})
                                </div>
                            </div>
                            @{
                                errorClass = Html.HasErrorFor(x => x.Register.Username) ? @"error" : "";
                            }
                            <div class="control-group @errorClass">
                                @Html.LabelFor(x=>x.Register.Password, new { @class="control-label"})
                                <div class="controls">
                                    @Html.PasswordFor(x=>x.Register.Password, new { @placeholder="and enter a password"})
                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary">Register</button>
                            </div>
                        </fieldset>
                    }
                </div>
                <div class="span1"></div>
            </div>
            <div class="navbar navbar-inverse navbar-fixed-bottom">
                <div class="navbar-inner">
                    <div class="container-fluid">
                        <div class="row-fluid">
                            <div class="span1"></div>
                            <div class="span10">
                                <a rel="license" href="http://www.gnu.org/licenses/agpl-3.0.txt" target="_blank">&copy; @DateTime.Now.Year released under the AGPL</a>
                                &nbsp;&nbsp;-&amp;&nbsp;&nbsp;
                                <a target="_blank" href="http://www.github.com/t123/readingtool/">source code</a>
                            </div>
                            <div class="span1"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @Bundles.RenderScripts("body")
        @Bundles.RenderScripts("footer")
    </body>
</html>