@using ReadingTool.Common
@model ReadingTool.Site.Models.Groups.GroupViewModel
@{
    ViewBag.Title = "Group " + Model.Name;
    Bundles.AddInlineScript(
    @<text>
         <script language="javascript">
             function update() {
                 var texts = [];
                 $('input[type=checkbox]:checked').each(function (index, x) { texts.push($(x).val()); });
                 $('#texts').val(texts.join(','));
                 return true;
             }
             
             window.initWebGrid('@Url.Action("DetailsGrid")', {'data': '@Model.GroupId' });
         </script>
    </text>, "inline");
}

<div class="row-fluid">
    <div class="span12">
        <h4>@Model.Name</h4>
        <div class="filterbar">
            <input type="text" name="filter" id="filter" class="input-xxlarge" placeholder="search for title or collection name" />
            <select name="rowsPerPage" id="rowsPerPage" class="input-small">
                <option value="5">5</option>
                <option value="15">15</option>
                <option value="25">25</option>
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="250">250</option>
            </select>
            <a href="#" id="clearText">
                <i class="icon-remove" title="clear text filter"></i>
            </a>

            <a href="#" id="resetFilter">
                <i class="icon-refresh" title="clear the text filter, sort by and sort direction filter"></i>
            </a>
        </div>
        <div class="clr20"></div>
        <div id="grid"></div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12">
        <a href="@Url.Action("Index")" class="btn btn-primary">Back to my groups</a>
            @using(Html.BeginForm("UnshareTexts", "Groups", FormMethod.Post, new { @style = "display:inline;", onsubmit = "return update();" }))
            {
                <input type="hidden" name="GroupId" value="@Model.GroupId"/>
                @Html.AntiForgeryToken()
                <input type="hidden" name="texts" id="texts" />
                <button type="submit" class="btn">unshare selected texts</button>
            }

        @if(Model.MembershipType == MembershipType.Member || Model.MembershipType == MembershipType.Moderator)
        {
            using(Html.BeginForm("LeaveGroup", "Groups", new { id = Model.GroupId }, FormMethod.Post, new { style = "width: 200px; display:inline-block;" }))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger" style="width: 100%">Leave this group</button>
            }
        }
    </div>
</div>