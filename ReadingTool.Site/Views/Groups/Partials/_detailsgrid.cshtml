@using ReadingTool.Common
@model ReadingTool.Common.Search.SearchGridResult<ReadingTool.Site.Models.Groups.GroupTextViewModel> 
@{
    Layout = "";
    WebGrid grid = new WebGrid(Model.Items, rowsPerPage: @Model.Paging.RowsPerPage);
}

@grid.GetHtml(
    tableStyle: "table table-striped table-bordered table-condensed table-hover gridtable",
    numericLinksCount: 0,
    mode: WebGridPagerModes.Numeric,
    footerStyle: "hidden",
    columns: new[]
        {
            grid.Column(header: "", style: "col5", format:@<text>
                                                                @if(item.IsOwner || (item.MembershipType==MembershipType.Owner || item.MembershipType==MembershipType.Moderator))
                                                                {
                                                                    <input type="checkbox" value="@item.TextId" name="remove"/>
                                                                }
                                                            </text>),
            grid.Column("Owner", header: "Owner", style: "col10", format:@<text>@item.User</text>),
            grid.Column("Language1", header: "Language", style: "col10"),
             grid.Column("Title", format:@<text>
                                             @item.Title
@if(item.IsParallel)
{
    <i class="icon-pause pull-right" title="text is parallel"> </i>
}

@if(item.ShareAudioUrl && !string.IsNullOrEmpty(item.AudioUrl))
{
    <i class="icon-music pull-right" title="text has audio"> </i>
}
                                         </text>),
            grid.Column("CollectionName", header: "Collection Name", style: "col20"),
            grid.Column(style:"col5", format:@<text>
                                                  <div class="btn-group">
                                                          @if(item.IsParallel)
                                                          {
                                                              <a href="@Url.Action("ReadParallel", new { id=item.TextId, groupId=item.GroupId})" class="btn btn-small btn-primary">read parallel</a>
                                                          }
                                                          else
                                                          {
                                                              <a href="@Url.Action("Read", new { id=item.TextId, groupId=item.GroupId})" class="btn btn-small btn-primary">read</a>
                                                          }
                                                          <button class="btn btn-small dropdown-toggle" data-toggle="dropdown">
                                                              <span class="caret"></span>
                                                          </button>
                                                          <ul class="dropdown-menu">
                                                              <li>
                                                                  <a href="@Url.Action("Read", new { id=item.TextId, groupId=item.GroupId})" class="btn">read</a>
                                                              </li>
                                                              @if(item.IsParallel)
                                                              {
                                                                  <li>
                                                                      <a href="@Url.Action("ReadParallel", new {id = item.TextId, groupId=item.GroupId})" class="btn">read parallel</a>
                                                                  </li>
                                                              }
                                                          </ul>
                                                  </div> 
                                              </text>)
    }
)

@Html.Partial("~/Views/Shared/_pager.cshtml", Model.Paging)

<script language="javascript">
    $('#grid table thead tr th:first').html('<input type="checkbox" id="checkAll" value="" />');

    $('#checkAll').live('click', function (e) {
        updateCheckboxes();
    });
    
    function updateCheckboxes() {
        var state = $('#checkAll').attr('checked');
        if (state == undefined) state = false;
        $('.table input[type=checkbox]').each(function () {
            $(this).attr('checked', state);
        });
    }
</script>