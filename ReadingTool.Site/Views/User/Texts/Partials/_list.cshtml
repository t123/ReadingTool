@using ReadingTool.Entities.Search
@model ReadingTool.Entities.Search.SearchGridResult<ReadingTool.Site.Models.User.TextListModel> 
@{
    WebGrid grid = new WebGrid(Model.Items, rowsPerPage: @Model.RowsPerPage);
}

@grid.GetHtml(
    tableStyle: "table table-striped table-bordered table-condensed table-hover",
    numericLinksCount: 0,
    mode: WebGridPagerModes.Numeric,
    footerStyle: "hidden",
    
    columns: new[] { 
        grid.Column("Language", format: @<text>
                                             @ViewHelpers.FormatLanguage(@item.Language, @item.LanguageColour)
                                         </text>),
        grid.Column("Title", format: @<text>
                                          @if(!string.IsNullOrEmpty(item.Tags))
                                            {
                                                <i class="icon-tags" title="@item.Tags"> </i>
                                            }

                                          @if(item.HasAudio)
                                          {
                                              <i class="icon-music" title="has audio"> </i>
                                          }
                                            
                                          @item.Title
                                      </text>),
        grid.Column("CollectionName", header: "Collection Name"),
        grid.Column("CollectionNo", header: "Collection No", canSort:false),
        grid.Column("LastSeen" , header: "Last Seen", format:@<text>
                                            @Html.FormatDateHumanAgo((DateTime?)@item.LastSeen, "ago")
                                        </text>),
        grid.Column("", 
                        style: "button", 
                        header: "", 
                    format: @<text>
                              @if(@item.IsParallel)
                              {
                                  <div class="btn-group">
                                    <a href="@Url.Action("Read", new { id = item.Id })" title="read" class="btn btn-mini">read</a>
                                    <a href="@Url.Action("ReadInParallel", new { id = item.Id })" title="read in parallel" class="btn btn-mini">parallel</a>
                                  </div>
                              }
                              else
                              {
                                  <a href="@Url.Action("Read", new { id = item.Id })" title="read" class="btn btn-mini">read</a>
                              }
                             </text>),

        grid.Column("", style: "button", header: "", format: @<text>@Html.EditButton(Url.Action("Edit", new { id = item.Id }))</text>),
        grid.Column("", style: "button", header: "", format: @<text>@Html.DeleteButton(Url.Action("Delete", new { id = item.Id }))</text>)
    }
    )

@Html.Partial("Partials/_pager", new SearchGridResult<int>
    {
        Direction = Model.Direction,
        Items = null,
        Page = Model.Page,
        RowsPerPage = Model.RowsPerPage,
        Sort = Model.Sort,
        TotalRows = Model.TotalRows
})