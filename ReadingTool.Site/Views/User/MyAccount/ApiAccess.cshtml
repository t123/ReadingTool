@model ReadingTool.Site.Models.User.ApiModel
@{
    ViewBag.Title = "My Account";
}

@section Menu
{
    @Html.Partial("Partials/_menu")
}

@if(Model!=null && !string.IsNullOrWhiteSpace(Model.ApiKey))
{
    <div class="alert alert-box">
        <strong>Your API key is:</strong>
        <h3>@Model.ApiKey</h3>
    </div>
}

@using(Html.BeginForm("ApiAccess", "MyAccount", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>API Access</legend>
        @Html.BootstrapFormItem(x => x.IsEnabled)
        
        @if(Model==null || !Model.IsEnabled)
        {
            <input type="hidden" name="IsEnabled" value="false" />
        }
        else
        {
            @Html.BootstrapFormItem(x => x.CreateNewKey)
        }
        
        <div class="buttons">
            <input type="submit" class="btn btn-primary" value="save" />
            @Html.ActionLink("Cancel", ViewContext.RouteData.Values["action"].ToString(), new { }, new { @class = "btn btn-link" })
        </div>
    </fieldset>
}
<hr/>
<pre>
    <strong>Accessing the API</strong>
    You should send the above key through in the header as <strong>X-ApiKey</strong><br/>
    The following <strong>GET</strong> methods are implemented:
    <ul>
        <li>Languages:</li>
        <ul>
            <li>/api/languages</li>
            <li>/api/languages/{ID}</li>
        </ul>
        <li>Texts:</li>
        <ul>
            <li>/api/texts</li>
            <li>/api/texts/{ID}</li>
            <li>/api/texts/findbyfilter/{FILTER}?page=PAGENO&amp;limit=LIMIT</li>
        </ul>
        <li>Terms:</li>
        <ul>
            <li>/api/terms</li>
            <li>/api/terms/{ID}</li>
            <li>/api/terms/findbyfilter/{FILTER}?page=PAGENO&amp;limit=LIMIT</li>
        </ul>
    </ul>
    The {FILTER} should be HTML encoded and works the same ways as the search on the terms and texts pages.
</pre>